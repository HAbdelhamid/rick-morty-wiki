import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import Cards from "../components/cards";
import Search from "../components/search";
import styles from "../styles/Home.module.css";
import { useQuery } from "@apollo/client";
import styled from "styled-components";
import CHARACTERS_QUERY from "../gql/queries/characters";

// const inter = Inter({ subsets: ["latin"] });

export default function Home({}) {
  const { loading, data, fetchMore, refetch, error } =
    useQuery(CHARACTERS_QUERY);

  if (loading) return "Loading...";
  if (error) return `Error! ${error.message}`;
  // const characters = data.characters.results;

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.center}>
          <Image
            className={styles.logo}
            src="/rm.svg"
            alt="rick and morty Logo"
            width={350}
            height={250}
            priority
          />
        </div>
        <Search
          onSearch={({ name }: any) => {
            refetch({ name });
          }}
          onReset={() => {
            refetch({ name: "" });
          }}
        />
        <Cards
          data={data}
          loadMore={({ page }) => {
            fetchMore({
              variables: {
                page,
              },
            });
          }}
        />
      </main>
    </div>
  );
}

const StyledButton = styled.button`
  padding: 0.7em;
  margin: 0.5em;
  background: white;
  color: black;
  border: none;
  border-radius: 15px;
  cursor: pointer;
`;

// //Styled-components CSS
// const Container = styled.div`
//   padding: 1em;
//   margin-bottom: 2em;
//   justify-content: center;
// `;

// const StyledInput = styled.input`
//   padding: 0.7em;
//   margin: 0.5em;
//   background: white;
//   color: black;
//   border: none;
//   border-radius: 15px;
// `;

// export async function getServerSideProps() {
//   // const { data } = await graphqlClient.query({
//   //   query: CHARACTERS_QUERY
//   // });

//   return {
//     props: {
//       // ssrData: data
//     },
//   };
// }
