import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'
import { gql, useQuery } from "@apollo/client";
import graphqlClient from "../gql/graphql-client";
import { useState } from 'react'

const inter = Inter({ subsets: ['latin'] })

const query = gql`
query($p: Int) {
  characters(page: $p) {
    info {
      pages
      next
      prev
    }
    results {
      name 
      status 
      species
      image
    }
  }
}
`;

export default function Home({ ssrData }) {


  const [savedata, setSaveData] = useState(ssrData)
  const [search, setSearch] = useState('')
  const { loading, data, fetchMore } = useQuery(query, {ssr:false});

  console.log(loading, data);


  const characters = savedata?.results;

  return (
    <div>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        
        <main className={styles.main}>
          <div className={styles.center}>
            <Image
              className={styles.logo}
              src="/rm.svg"
              alt="rick and morty Logo"
              width={300}
              height={200}
              priority
            />
          </div>

          <input 
            id="outlined-basic" 
            onChange={(e) => setSearch(e.target.value)}
          />

          <div className={styles.grid}>

            {characters.filter((characters) => 
              characters.name.toLowerCase().includes(search.toLowerCase())).map((characters) => (
                <div className={styles.card} key={characters.name}>
                  <Image  src={characters.image} alt={characters.name} width={200} height={200} />
                  <h3>{characters.name}</h3>
                  <p>{characters.species}</p>
                  <p>{characters.status}</p>
                </div>
            ))}

          </div>
          <button onClick={ async () => {  
            const fetch = await fetchMore({
              variables: {
                p: savedata.info.next,
              },
        
            })
            console.log(fetch);
          }}

      >Load more</button>
        </main>
    </div>
  )
}

export async function getServerSideProps() {
  const { data } = await graphqlClient.query({
    query
    
  });

  return {
    props: {
      ssrData: data.characters
    },
 };
}
