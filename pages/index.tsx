import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import { gql, useQuery } from "@apollo/client";
import styled from "styled-components";
import { Key, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

const CHARACTERS_QUERY = gql`
  query getCharacters($page: Int, $name: String) {
    characters(page: $page, filter: { name: $name }) {
      info {
        pages
        next
        prev
      }
      results {
        name
        status
        species
        type
        gender
        image
      }
    }
  }
`;

export default function Home({}) {
  const [search, setSearch] = useState("");
  const { loading, data, fetchMore, error, refetch } = useQuery(
    CHARACTERS_QUERY,
    {
      variables: {
        name: search,
      },
    }
  );

  if (loading) return "Loading...";
  if (error) return `Error! ${error.message}`;

  const characters = data.characters.results;

  // const checkType = async () => {
  //   characters.gender ? (
  //     <p>Type: {characters.type}</p>
  //   ) : (
  //     <p>No Type</p>
  //   );
  // }}

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.center}>
          <Image
            className={styles.logo}
            src="/rm.svg"
            alt="rick and morty Logo"
            width={350}
            height={250}
            priority
          />
        </div>
        <Container>
          <StyledInput
            placeholder="Search"
            type="text"
            onChange={(e) => {
              setSearch(e.target.value);
            }}
          />
          <StyledButton
            onClick={() => {
              refetch({ name: search });
              setSearch("");
            }}
          >
            search
          </StyledButton>
          <StyledButton
            onClick={() => {
              refetch({ name: "" });
            }}
          >
            reset
          </StyledButton>
        </Container>

        <div className={styles.grid}>
          {characters.map(
            (character: typeof data, index: Key | null | undefined) => {
              return (
                <div className={styles.card} key={index}>
                  <Image
                    src={character.image}
                    alt={character.name}
                    width={180}
                    height={180}
                  />
                  <h3>{character.name}</h3>
                  <p>Status: {character.status}</p>
                  {character.type ? (
                    <p>Type: {character.type}</p>
                  ) : (
                    <p>Type: No Type</p>
                  )}
                  <p>Species: {character.species}</p>
                  <p>Gender: {character.gender}</p>
                </div>
              );
            }
          )}
        </div>
        <StyledButton
          onClick={async () => {
            const fetch = await fetchMore({
              variables: {
                page: data.characters.info.next,
              },
            });
          }}
        >
          Load more
        </StyledButton>
      </main>
    </div>
  );
}

// export async function getServerSideProps() {
//   // const { data } = await graphqlClient.query({
//   //   query: CHARACTERS_QUERY
//   // });

//   return {
//     props: {
//       // ssrData: data
//     },
//   };
// }

//Styled-components CSS
const Container = styled.div`
  padding: 1em;
  margin-bottom: 2em;
  justify-content: center;
`;
const StyledButton = styled.button`
  padding: 0.7em;
  margin: 0.5em;
  background: white;
  color: black;
  border: none;
  border-radius: 15px;
  cursor: pointer;
`;
const StyledInput = styled.input`
  padding: 0.7em;
  margin: 0.5em;
  background: white;
  color: black;
  border: none;
  border-radius: 15px;
`;
