import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
import { gql, useQuery } from "@apollo/client";
import graphqlClient from "../gql/graphql-client";
import { useState } from "react";

const inter = Inter({ subsets: ["latin"] });

const CHARACTERS_QUERY = gql`
  query getCharacters($page: Int, $name: String) {
    characters(page: $page, filter: { name: $name }) {
      info {
        pages
        next
        prev
      }
      results {
        name
        status
        species
        image
      }
    }
  }
`;

export default function Home({}) {
  const [search, setSearch] = useState("");
  const { loading, data, fetchMore, error, refetch } = useQuery(
    CHARACTERS_QUERY,
    {
      variables: {
        name: search,
      },
    }
  );

  if (loading) return "Loading...";
  if (error) return `Error! ${error.message}`;

  const characters = data.characters.results;

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className={styles.center}>
          <Image
            className={styles.logo}
            src="/rm.svg"
            alt="rick and morty Logo"
            width={300}
            height={200}
            priority
          />
        </div>
        <input
          id="outlined-basic"
          value={search}
          onChange={(e) => {
            setSearch(e.target.value);
          }}
        />
        <button
          onClick={() => {
            refetch({ name: search });
          }}
        >
          search
        </button>
        <button
          onClick={() => {
            setSearch("");
          }}
        >
          reset
        </button>

        <div className={styles.grid}>
          {characters.map((character, index) => {
            return (
              <div className={styles.card} key={index}>
                <Image
                  src={character.image}
                  alt={character.name}
                  width={200}
                  height={200}
                />
                <h3>{character.name}</h3>
                <p>{character.species}</p>
                <p>{character.status}</p>
              </div>
            );
          })}
        </div>
        <button
          onClick={async () => {
            const fetch = await fetchMore({
              variables: {
                page: data.characters.info.next,
              },
            });
          }}
        >
          Load more
        </button>
      </main>
    </div>
  );
}

export async function getServerSideProps() {
  // const { data } = await graphqlClient.query({
  //   query: CHARACTERS_QUERY
  // });

  return {
    props: {
      // ssrData: data
    },
  };
}
